{
  "metadata": {
    "user": "appendix_3",
    "intervention": "copd",
    "scenario": "baseline",
    "country": "AFG",
    "version": "1.0"
  },
  "runtime": {
    "startYear": 2020,
    "endYear": 2120
  },
  "nodes": [
    {
      "id": "lrstce6u",
      "x": 110.04,
      "y": -14.49,
      "label": "COPDEpsd Mortality",
      "node_type": "surrogate",
      "color": "#7038E1",
      "generate_array": {
        "method": "single_value",
        "parameters": {
          "value": 0
        }
      }
    },
    {
      "id": "lrwzsau5",
      "x": 41.58,
      "y": -28.44,
      "label": "COPDEpsd HYL",
      "node_type": "surrogate",
      "color": "#7038E1",
      "generate_array": {
        "method": "single_value",
        "parameters": {
          "value": 0
        }
      },
      "flush": true
    },
    {
      "id": "lrso81aw",
      "x": 112.7,
      "y": 9.49,
      "label": "COPDEpsd_CFR",
      "color": "#06B4E1",
      "generate_array": {
        "data_fetcher_label": "fhdb",
        "method": "epidemiology",
        "parameters": {
          "country": "ARG",
          "disease": "COPD",
          "measure": "deaths"
        }
      }
    },
    {
      "id": "lrwz1ikj",
      "x": -18.95,
      "y": -68.46,
      "label": "Disability_Effect_Transform",
      "description": "Removing each effect from 1",
      "color": "#06B4E1",
      "flush": true,
      "generate_array": {
        "method": "single_value",
        "parameters": {
          "value": 1
        }
      }
    },
    {
      "id": "Deceased",
      "x": 148.12,
      "y": -36.12,
      "label": "Deceased",
      "description": "The state of being dead",
      "node_type": "state",
      "balance_type": "array",
      "color": "#FB6375",
      "order": 3
    },
    {
      "id": "COPDEpsd",
      "x": 105.75,
      "y": -39.27,
      "label": "COPDEpsd",
      "ageing": true,
      "color": "#E5EF73",
      "order": 1
    },
    {
      "id": "lrso71jf",
      "x": 88.96,
      "y": -103.88,
      "label": "Healthy_Disability_Weight",
      "color": "#06B4E1",
      "generate_array": {
        "fetch_once": true,
        "data_fetcher_label": "fhdb",
        "method": "healthy_disability",
        "parameters": {
          "country": "ARG"
        }
      }
    },
    {
      "id": "lrso7mga",
      "x": 9.91,
      "y": -106.16,
      "label": "COPD_Disability_Weight",
      "color": "#06B4E1",
      "generate_array": {
        "fetch_once": true,
        "data_fetcher_label": "copd",
        "method": "get_observation",
        "parameters": {
          "country": "ARG",
          "observation": "COPDEpsd -> Disability"
        }
      }
    },
    {
      "id": "Births",
      "x": 113.02,
      "y": -64.79,
      "label": "Births",
      "description": "Store of the number of births in the population",
      "node_type": "function",
      "balance_type": "array",
      "order": 2,
      "flush": true,
      "color": "#EB7FEF"
    },
    {
      "id": "lrste7nj",
      "x": 79.27,
      "y": -26.75,
      "label": "DsFreeSus HYL",
      "node_type": "surrogate",
      "color": "#7038E1",
      "generate_array": {
        "method": "single_value",
        "parameters": {
          "value": 1
        }
      },
      "flush": true
    },
    {
      "id": "Disability",
      "x": 54.7,
      "y": -8.11,
      "label": "Healthy Years Lived",
      "description": "A store of disability adjusted life years",
      "node_type": "state",
      "balance_type": "array",
      "color": "#FFB255",
      "flush": true
    },
    {
      "id": "DsFreeSus",
      "x": 144.17,
      "y": -59.92,
      "label": "DsFreeSus",
      "description": "State holding the balance of the healthy population",
      "node_type": "state",
      "balance_type": "array",
      "order": 0,
      "ageing": true,
      "generate_array": {
        "data_fetcher_label": "fhdb",
        "method": "population",
        "parameters": {
          "country": "ARG"
        },
        "fetch_once": true
      },
      "color": "#3CD009"
    },
    {
      "id": "lrst7n8a",
      "x": -35.67,
      "y": 14.55,
      "color": "#06B4E1",
      "flush": true,
      "label": "IpratropiumInhaler_Disability_Effect",
      "generate_array": {
        "method": "single_value",
        "parameters": {
          "value": 1
        }
      }
    },
    {
      "id": "lrst7nh0",
      "x": -37.42,
      "y": 9.35,
      "color": "#06B4E1",
      "flush": true,
      "label": "OralPrednisolone_Disability_Effect",
      "generate_array": {
        "method": "single_value",
        "parameters": {
          "value": 1
        }
      }
    },
    {
      "id": "lrst14z6",
      "x": -39.96,
      "y": 77.96,
      "label": "OralPrednisolone_Calculated_Coverage",
      "generate_array": {
        "method": "single_value",
        "parameters": {
          "value": 0
        }
      },
      "color": "#06B4E1",
      "flush": true
    },
    {
      "id": "lrst0woc",
      "x": -40.84,
      "y": 73.23,
      "label": "InhaledSalbutamol_Calculated_Coverage",
      "generate_array": {
        "method": "single_value",
        "parameters": {
          "value": 0
        }
      },
      "color": "#06B4E1",
      "flush": true
    },
    {
      "id": "lrst1pq2",
      "x": -40.58,
      "y": 83.1,
      "label": "IpratropiumInhaler_Calculated_Coverage",
      "generate_array": {
        "method": "single_value",
        "parameters": {
          "value": 0
        }
      },
      "color": "#06B4E1",
      "flush": true
    },
    {
      "id": "lrst79uc",
      "x": -41,
      "y": 4.3,
      "color": "#06B4E1",
      "flush": true,
      "label": "InhaledSalbutamol_Disability_Effect",
      "generate_array": {
        "method": "single_value",
        "parameters": {
          "value": 1
        }
      }
    },
    {
      "id": "lrsnjr1s",
      "x": -36.05,
      "y": -40.77,
      "color": "#06B4E1",
      "label": "IpratropiumInhaler_Disability_Impact",
      "generate_array": {
        "fetch_once": true,
        "method": "single_value",
        "parameters": {
          "value": -0.169
        }
      }
    },
    {
      "id": "lrsnjnt3",
      "x": -39.65,
      "y": -45.82,
      "color": "#06B4E1",
      "label": "OralPrednisolone_Disability_Impact",
      "generate_array": {
        "fetch_once": true,
        "method": "single_value",
        "parameters": {
          "value": -0.337
        }
      }
    },
    {
      "id": "lrsnjkmt",
      "x": -43.65,
      "y": -51.14,
      "color": "#06B4E1",
      "label": "InhaledSalbutamol_Disability_Impact",
      "generate_array": {
        "fetch_once": true,
        "method": "single_value",
        "parameters": {
          "value": -0.148
        }
      }
    },
    {
      "id": "lrso24ss",
      "x": -58.08,
      "y": 140.64,
      "label": "IpratropiumInhaler_Coverage",
      "generate_array": {
        "method": "single_value",
        "parameters": {
          "value": 0.05
        }
      },
      "color": "#06B4E1",
      "flush": true
    },
    {
      "id": "lrsnhyyd",
      "x": -56.14,
      "y": 145.14,
      "label": "IpratropiumInhaler_StartingCoverage",
      "generate_array": {
        "fetch_once": true,
        "method": "single_value",
        "parameters": {
          "value": -0.05
        }
      },
      "color": "#06B4E1"
    },
    {
      "id": "lrsngpv8",
      "x": -77.53,
      "y": 126.42,
      "label": "OralPrednisolone_Coverage",
      "generate_array": {
        "method": "single_value",
        "parameters": {
          "value": 0.05
        }
      },
      "color": "#06B4E1",
      "flush": true
    },
    {
      "id": "lrso28l8",
      "x": -76.14,
      "y": 130.55,
      "label": "OralPrednisolone_StartingCoverage",
      "generate_array": {
        "fetch_once": true,
        "method": "single_value",
        "parameters": {
          "value": -0.05
        }
      },
      "color": "#06B4E1"
    },
    {
      "id": "lrsnalk2",
      "x": -100.83,
      "y": 110.79,
      "label": "InhaledSalbutamol_Coverage",
      "generate_array": {
        "method": "single_value",
        "parameters": {
          "value": 0.05
        }
      },
      "color": "#06B4E1",
      "flush": true
    },
    {
      "id": "lrso22do",
      "x": -99.69,
      "y": 115.98,
      "label": "InhaledSalbutamol_StartingCoverage",
      "generate_array": {
        "fetch_once": true,
        "method": "single_value",
        "parameters": {
          "value": -0.05
        }
      },
      "color": "#06B4E1"
    },
    {
      "id": "lrsni0s5",
      "x": -128.39,
      "y": 14.86,
      "label": "IpratropiumInhaler_PIN",
      "generate_array": {
        "fetch_once": true,
        "method": "single_value",
        "parameters": {
          "value": 0.21
        }
      },
      "color": "#06B4E1"
    },
    {
      "id": "lrsngte4",
      "x": -128.65,
      "y": 8.97,
      "label": "OralPrednisolone_PIN",
      "generate_array": {
        "fetch_once": true,
        "method": "single_value",
        "parameters": {
          "value": 0.12
        }
      },
      "color": "#06B4E1"
    },
    {
      "id": "lrsnavq2",
      "x": -129.23,
      "y": 3.58,
      "label": "InhaledSalbutamol_PIN",
      "generate_array": {
        "fetch_once": true,
        "method": "single_value",
        "parameters": {
          "value": 1
        }
      },
      "color": "#06B4E1"
    },
    {
      "id": "cigutJvD",
      "x": 14.84,
      "y": -88.44,
      "label": "COPD_HYL",
      "color": "#06B4E1",
      "generate_array": {
        "method": "single_value",
        "parameters": {
          "value": 1
        }
      },
      "flush": true
    },
    {
      "id": "2yj2qyPv",
      "x": 77.23,
      "y": -88.65,
      "label": "Healthy_HYL",
      "color": "#06B4E1",
      "generate_array": {
        "method": "single_value",
        "parameters": {
          "value": 1
        }
      },
      "flush": true
    },
    {
      "id": "wdcNK6r7",
      "x": 42.43,
      "y": -77.53,
      "label": "Combined_HYL",
      "color": "#06B4E1",
      "generate_array": {
        "method": "single_value",
        "parameters": {
          "value": 1
        }
      },
      "flush": true
    },
    {
      "id": "OxzcOhs4",
      "x": 42.64,
      "y": -65.58,
      "label": "Combined_DW",
      "color": "#06B4E1",
      "generate_array": {
        "method": "single_value",
        "parameters": {
          "value": 1
        }
      },
      "flush": true
    },
    {
      "id": "btLpjBIQ",
      "x": 43.05,
      "y": -54.67,
      "label": "Modified_HYL",
      "color": "#06B4E1",
      "generate_array": {
        "method": "single_value",
        "parameters": {
          "value": 1
        }
      },
      "flush": true
    }
  ],
  "links": [
    {
      "id": "3gSm1z84",
      "source": "DsFreeSus",
      "target": "DsFreeSus",
      "description": "Adjust the state by the net migration rate",
      "edge_type": "modifier",
      "value_to_target_operator": "add",
      "requires_source_balance": true,
      "remove_value_from_source": false,
      "generate_array": {
        "data_fetcher_label": "fhdb",
        "method": "migration",
        "parameters": {
          "country": "ARG"
        }
      },
      "order": 0,
      "label": "DsFreeSus -> DsFreeSus"
    },
    {
      "id": "6dXmRQ7e",
      "source": "DsFreeSus",
      "target": "Births",
      "order": 1,
      "description": "Project the number of births using the population and ASFR",
      "edge_type": "projection",
      "requires_source_balance": true,
      "remove_value_from_source": false,
      "value_to_target_operator": "add",
      "generate_array": {
        "data_fetcher_label": "fhdb",
        "method": "fertility",
        "parameters": {
          "country": "ARG"
        }
      },
      "label": "DsFreeSus -> Births"
    },
    {
      "id": "JPGqVn1u",
      "source": "Births",
      "target": "DsFreeSus",
      "description": "Male births into the population",
      "edge_type": "modifier",
      "requires_source_balance": true,
      "remove_value_from_source": false,
      "value_to_target_operator": "add",
      "generate_array": {
        "data_fetcher_label": "fhdb",
        "method": "sex_ratio",
        "parameters": {
          "country": "ARG",
          "sex": "m"
        }
      },
      "weighted_balance_postprocessing": {
        "into": [
          0,
          0
        ]
      },
      "order": 0,
      "label": "Births -> DsFreeSus"
    },
    {
      "id": "k3JrWa6h",
      "source": "Births",
      "target": "DsFreeSus",
      "description": "Female births into the population",
      "edge_type": "modifier",
      "requires_source_balance": true,
      "remove_value_from_source": false,
      "value_to_target_operator": "add",
      "generate_array": {
        "data_fetcher_label": "fhdb",
        "method": "sex_ratio",
        "parameters": {
          "country": "ARG",
          "sex": "f"
        }
      },
      "weighted_balance_postprocessing": {
        "into": [
          1,
          0
        ]
      },
      "order": 0,
      "label": "Births -> DsFreeSus"
    },
    {
      "id": "MfWskKJT",
      "source": "DsFreeSus",
      "target": "Deceased",
      "order": 2,
      "description": "Transition people into the mortality state",
      "edge_type": "transition",
      "requires_source_balance": true,
      "remove_value_from_source": true,
      "value_to_target_operator": "add",
      "generate_array": {
        "data_fetcher_label": "fhdb",
        "method": "mortality",
        "parameters": {
          "country": "ARG"
        }
      },
      "label": "DsFreeSus -> Deceased"
    },
    {
      "id": "dlGB2RD6",
      "source": "DsFreeSus",
      "target": "COPDEpsd",
      "description": "Progression of COPD episode",
      "edge_type": "transition",
      "requires_source_balance": true,
      "remove_value_from_source": true,
      "value_to_target_operator": "add",
      "generate_array": {
        "data_fetcher_label": "fhdb",
        "method": "epidemiology",
        "parameters": {
          "country": "ARG",
          "disease": "COPD",
          "measure": "incidence"
        }
      },
      "order": 4,
      "label": "Incidence DsFreeSus -> COPDEpsd"
    },
    {
      "id": "eBRm4kvr",
      "source": "COPDEpsd",
      "target": "Births",
      "order": 1,
      "description": "Project the number of births using the population and ASFR",
      "edge_type": "projection",
      "requires_source_balance": true,
      "remove_value_from_source": false,
      "value_to_target_operator": "add",
      "generate_array": {
        "data_fetcher_label": "fhdb",
        "method": "fertility",
        "parameters": {
          "country": "ARG"
        }
      },
      "label": "COPDEpsd -> Births"
    },
    {
      "id": "WALgwDoi",
      "source": "COPDEpsd",
      "target": "COPDEpsd",
      "description": "Adjust the state by the net migration rate",
      "edge_type": "modifier",
      "value_to_target_operator": "add",
      "requires_source_balance": true,
      "remove_value_from_source": false,
      "generate_array": {
        "data_fetcher_label": "fhdb",
        "method": "migration",
        "parameters": {
          "country": "ARG"
        }
      },
      "order": 0,
      "label": "COPDEpsd -> COPDEpsd"
    },
    {
      "id": "HmI3Gkua",
      "source": "DsFreeSus",
      "target": "COPDEpsd",
      "description": "Progression of COPD episode",
      "edge_type": "transition",
      "requires_source_balance": true,
      "remove_value_from_source": true,
      "value_to_target_operator": "add",
      "generate_array": {
        "fetch_once": true,
        "data_fetcher_label": "fhdb",
        "method": "epidemiology",
        "parameters": {
          "country": "ARG",
          "disease": "COPD",
          "measure": "prevalence"
        }
      },
      "order": 3,
      "label": "Prevalence DsFreeSus -> COPDEpsd"
    },
    {
      "id": "cpORh46w",
      "source": "lrsnalk2",
      "target": "lrst0woc",
      "edge_type": "projection",
      "requires_source_balance": true,
      "remove_value_from_source": false,
      "value_to_target_operator": "add",
      "generate_array": {
        "method": "single_value",
        "parameters": {
          "value": 1
        }
      },
      "label": "InhaledSalbutamol_Coverage -> InhaledSalbutamol_Calculated_Coverage"
    },
    {
      "id": "g71GXNvq",
      "source": "lrso22do",
      "target": "lrst0woc",
      "edge_type": "projection",
      "requires_source_balance": true,
      "remove_value_from_source": false,
      "value_to_target_operator": "add",
      "generate_array": {
        "method": "single_value",
        "parameters": {
          "value": 1
        }
      },
      "label": "InhaledSalbutamol_StartingCoverage -> InhaledSalbutamol_Calculated_Coverage"
    },
    {
      "id": "TjND1e9T",
      "source": "lrsngpv8",
      "target": "lrst14z6",
      "edge_type": "projection",
      "requires_source_balance": true,
      "remove_value_from_source": false,
      "value_to_target_operator": "add",
      "generate_array": {
        "method": "single_value",
        "parameters": {
          "value": 1
        }
      },
      "label": "OralPrednisolone_Coverage -> OralPrednisolone_Calculated_Coverage"
    },
    {
      "id": "2cqXSWkb",
      "source": "lrso28l8",
      "target": "lrst14z6",
      "edge_type": "projection",
      "requires_source_balance": true,
      "remove_value_from_source": false,
      "value_to_target_operator": "add",
      "generate_array": {
        "method": "single_value",
        "parameters": {
          "value": 1
        }
      },
      "label": "OralPrednisolone_StartingCoverage -> OralPrednisolone_Calculated_Coverage"
    },
    {
      "id": "9Fe9k1UV",
      "source": "lrsnhyyd",
      "target": "lrst1pq2",
      "edge_type": "projection",
      "requires_source_balance": true,
      "remove_value_from_source": false,
      "value_to_target_operator": "add",
      "generate_array": {
        "method": "single_value",
        "parameters": {
          "value": 1
        }
      },
      "label": "IpratropiumInhaler_StartingCoverage -> IpratropiumInhaler_Calculated_Coverage"
    },
    {
      "id": "6aVqOh7C",
      "source": "lrso24ss",
      "target": "lrst1pq2",
      "edge_type": "projection",
      "requires_source_balance": true,
      "remove_value_from_source": false,
      "value_to_target_operator": "add",
      "generate_array": {
        "method": "single_value",
        "parameters": {
          "value": 1
        }
      },
      "label": "IpratropiumInhaler_Coverage -> IpratropiumInhaler_Calculated_Coverage"
    },
    {
      "id": "lZsxgkeD",
      "source": "lrsngte4",
      "target": "lrst7nh0",
      "edge_type": "projection",
      "requires_source_balance": true,
      "remove_value_from_source": false,
      "value_to_target_operator": "multiply",
      "generate_array": {
        "method": "single_value",
        "parameters": {
          "value": 1
        }
      },
      "label": "OralPrednisolone_PIN -> OralPrednisolone_Disability_Effect"
    },
    {
      "id": "LIyy1ky9",
      "source": "lrst14z6",
      "target": "lrst7nh0",
      "edge_type": "projection",
      "requires_source_balance": true,
      "remove_value_from_source": false,
      "value_to_target_operator": "multiply",
      "generate_array": {
        "method": "single_value",
        "parameters": {
          "value": 1
        }
      },
      "label": "OralPrednisolone_Calculated_Coverage -> OralPrednisolone_Disability_Effect"
    },
    {
      "id": "plB7iwsy",
      "source": "lrsnjnt3",
      "target": "lrst7nh0",
      "edge_type": "projection",
      "requires_source_balance": true,
      "remove_value_from_source": false,
      "value_to_target_operator": "multiply",
      "generate_array": {
        "method": "single_value",
        "parameters": {
          "value": 1
        }
      },
      "label": "OralPrednisolone_Disability_Impact -> OralPrednisolone_Disability_Effect"
    },
    {
      "id": "QFKsJ7KA",
      "source": "lrsnavq2",
      "target": "lrst79uc",
      "edge_type": "projection",
      "requires_source_balance": true,
      "remove_value_from_source": false,
      "value_to_target_operator": "multiply",
      "generate_array": {
        "method": "single_value",
        "parameters": {
          "value": 1
        }
      },
      "label": "InhaledSalbutamol_PIN -> InhaledSalbutamol_Disability_Effect"
    },
    {
      "id": "R4Vwfikm",
      "source": "lrst0woc",
      "target": "lrst79uc",
      "edge_type": "projection",
      "requires_source_balance": true,
      "remove_value_from_source": false,
      "value_to_target_operator": "multiply",
      "generate_array": {
        "method": "single_value",
        "parameters": {
          "value": 1
        }
      },
      "label": "InhaledSalbutamol_Calculated_Coverage -> InhaledSalbutamol_Disability_Effect"
    },
    {
      "id": "u3I26S1y",
      "source": "lrsnjkmt",
      "target": "lrst79uc",
      "edge_type": "projection",
      "requires_source_balance": true,
      "remove_value_from_source": false,
      "value_to_target_operator": "multiply",
      "generate_array": {
        "method": "single_value",
        "parameters": {
          "value": 1
        }
      },
      "label": "InhaledSalbutamol_Disability_Impact -> InhaledSalbutamol_Disability_Effect"
    },
    {
      "id": "2UnmNJH5",
      "source": "lrsni0s5",
      "target": "lrst7n8a",
      "edge_type": "projection",
      "requires_source_balance": true,
      "remove_value_from_source": false,
      "value_to_target_operator": "multiply",
      "generate_array": {
        "method": "single_value",
        "parameters": {
          "value": 1
        }
      },
      "label": "IpratropiumInhaler_PIN -> IpratropiumInhaler_Disability_Effect"
    },
    {
      "id": "MnpPqwz9",
      "source": "lrst1pq2",
      "target": "lrst7n8a",
      "edge_type": "projection",
      "requires_source_balance": true,
      "remove_value_from_source": false,
      "value_to_target_operator": "multiply",
      "generate_array": {
        "method": "single_value",
        "parameters": {
          "value": 1
        }
      },
      "label": "IpratropiumInhaler_Calculated_Coverage -> IpratropiumInhaler_Disability_Effect"
    },
    {
      "id": "ydn35Gq6",
      "source": "lrsnjr1s",
      "target": "lrst7n8a",
      "edge_type": "projection",
      "requires_source_balance": true,
      "remove_value_from_source": false,
      "value_to_target_operator": "multiply",
      "generate_array": {
        "method": "single_value",
        "parameters": {
          "value": 1
        }
      },
      "label": "IpratropiumInhaler_Disability_Impact -> IpratropiumInhaler_Disability_Effect"
    },
    {
      "id": "FlHvd7e4",
      "source": "lrso81aw",
      "target": "lrstce6u",
      "edge_type": "projection",
      "requires_source_balance": true,
      "remove_value_from_source": false,
      "value_to_target_operator": "add",
      "generate_array": {
        "method": "single_value",
        "parameters": {
          "value": 1
        }
      },
      "label": "COPDEpsd_CFR -> COPDEpsd Mortality"
    },
    {
      "id": "rSVQNns4",
      "source": "lrst7nh0",
      "target": "lrwz1ikj",
      "edge_type": "projection",
      "requires_source_balance": true,
      "remove_value_from_source": false,
      "value_to_target_operator": "add",
      "generate_array": {
        "method": "single_value",
        "parameters": {
          "value": 1
        }
      },
      "label": "OralPrednisolone_Disability_Effect -> Disability_Effect_Transform"
    },
    {
      "id": "tgy0fCCF",
      "source": "lrst79uc",
      "target": "lrwz1ikj",
      "edge_type": "projection",
      "requires_source_balance": true,
      "remove_value_from_source": false,
      "value_to_target_operator": "add",
      "generate_array": {
        "method": "single_value",
        "parameters": {
          "value": 1
        }
      },
      "label": "InhaledSalbutamol_Disability_Effect -> Disability_Effect_Transform"
    },
    {
      "id": "EfuyA2u1",
      "source": "lrst7n8a",
      "target": "lrwz1ikj",
      "edge_type": "projection",
      "requires_source_balance": true,
      "remove_value_from_source": false,
      "value_to_target_operator": "add",
      "generate_array": {
        "method": "single_value",
        "parameters": {
          "value": 1
        }
      },
      "label": "IpratropiumInhaler_Disability_Effect -> Disability_Effect_Transform"
    },
    {
      "id": "Lvoz10h5",
      "source": "DsFreeSus",
      "target": "lrste7nj",
      "edge_type": "transition",
      "set_by_surrogate": true,
      "value_to_target_operator": "add",
      "requires_source_balance": true,
      "remove_value_from_source": false,
      "label": "DsFreeSus -> DsFreeSus HYL"
    },
    {
      "id": "nvUzLVjD",
      "source": "lrste7nj",
      "target": "Disability",
      "requires_source_balance": true,
      "remove_value_from_source": false,
      "value_to_target_operator": "add",
      "generate_array": {
        "method": "single_value",
        "parameters": {
          "value": 1
        }
      },
      "label": "DsFreeSus HYL -> Disability"
    },
    {
      "id": "5djuaIfD",
      "source": "COPDEpsd",
      "target": "lrwzsau5",
      "edge_type": "transition",
      "set_by_surrogate": true,
      "value_to_target_operator": "add",
      "requires_source_balance": true,
      "remove_value_from_source": false,
      "label": "COPDEpsd -> COPDEpsd HYL"
    },
    {
      "id": "Fnn2J6Fz",
      "source": "lrwzsau5",
      "target": "Disability",
      "requires_source_balance": true,
      "remove_value_from_source": false,
      "value_to_target_operator": "add",
      "generate_array": {
        "method": "single_value",
        "parameters": {
          "value": 1
        }
      },
      "label": "COPDEpsd HYL -> Disability"
    },
    {
      "id": "XNyqqSsC",
      "source": "COPDEpsd",
      "target": "lrstce6u",
      "edge_type": "transition",
      "set_by_surrogate": true,
      "value_to_target_operator": "add",
      "requires_source_balance": true,
      "remove_value_from_source": true,
      "label": "COPDEpsd -> COPDEpsd Mortality"
    },
    {
      "id": "0xQNQRAT",
      "source": "lrstce6u",
      "target": "Deceased",
      "requires_source_balance": true,
      "remove_value_from_source": false,
      "value_to_target_operator": "add",
      "generate_array": {
        "method": "single_value",
        "parameters": {
          "value": 1
        }
      },
      "label": "COPDEpsd Mortality -> Deceased"
    },
    {
      "id": "qWTVoxqS",
      "source": "lrso7mga",
      "target": "cigutJvD",
      "edge_type": "projection",
      "requires_source_balance": true,
      "remove_value_from_source": false,
      "value_to_target_operator": "add",
      "generate_array": {
        "method": "single_value",
        "parameters": {
          "value": 1
        },
        "postprocessing": {
          "negative": true
        }
      },
      "label": "Asthma_Disability_Weight -> Asthma_HYL"
    },
    {
      "id": "Sayp6xhP",
      "source": "lrso71jf",
      "target": "2yj2qyPv",
      "edge_type": "projection",
      "requires_source_balance": true,
      "remove_value_from_source": false,
      "value_to_target_operator": "add",
      "generate_array": {
        "method": "single_value",
        "parameters": {
          "value": 1
        },
        "postprocessing": {
          "negative": true
        }
      },
      "label": "Healthy_Disability_Weight -> Healthy_HYL"
    },
    {
      "id": "fmnbjGOh",
      "source": "cigutJvD",
      "target": "wdcNK6r7",
      "edge_type": "projection",
      "requires_source_balance": true,
      "remove_value_from_source": false,
      "value_to_target_operator": "multiply",
      "generate_array": {
        "method": "single_value",
        "parameters": {
          "value": 1
        }
      },
      "label": "Asthma_HYL -> Combined_HYL"
    },
    {
      "id": "6Ei2mkxO",
      "source": "2yj2qyPv",
      "target": "wdcNK6r7",
      "edge_type": "projection",
      "requires_source_balance": true,
      "remove_value_from_source": false,
      "value_to_target_operator": "multiply",
      "generate_array": {
        "method": "single_value",
        "parameters": {
          "value": 1
        }
      },
      "label": "Healthy_HYL -> Combined_HYL"
    },
    {
      "id": "wpXhLEit",
      "source": "2yj2qyPv",
      "target": "lrste7nj",
      "label": "Healthy_HYL -> DsFreeSus HYL"
    },
    {
      "id": "NCs51br5",
      "source": "wdcNK6r7",
      "target": "OxzcOhs4",
      "edge_type": "projection",
      "requires_source_balance": true,
      "remove_value_from_source": false,
      "value_to_target_operator": "add",
      "generate_array": {
        "method": "single_value",
        "parameters": {
          "value": 1
        },
        "postprocessing": {
          "negative": true
        }
      },
      "label": "Combined_HYL -> Combined_DW"
    },
    {
      "id": "VmiA6H36",
      "source": "OxzcOhs4",
      "target": "btLpjBIQ",
      "edge_type": "projection",
      "requires_source_balance": true,
      "remove_value_from_source": false,
      "value_to_target_operator": "add",
      "generate_array": {
        "method": "single_value",
        "parameters": {
          "value": 1
        },
        "postprocessing": {
          "negative": true
        }
      },
      "label": "Combined_DW -> Modified_HYL"
    },
    {
      "id": "ynJLmSBG",
      "source": "btLpjBIQ",
      "target": "lrwzsau5",
      "edge_type": "projection",
      "requires_source_balance": true,
      "remove_value_from_source": false,
      "value_to_target_operator": "add",
      "generate_array": {
        "method": "single_value",
        "parameters": {
          "value": 1
        }
      },
      "label": "Modified_HYL -> AsthmaEpsd HYL"
    },
    {
      "id": "s2aCngF5",
      "source": "lrwz1ikj",
      "target": "OxzcOhs4",
      "edge_type": "projection",
      "requires_source_balance": true,
      "remove_value_from_source": false,
      "value_to_target_operator": "multiply",
      "generate_array": {
        "method": "single_value",
        "parameters": {
          "value": 1
        }
      },
      "label": "Disability_Effect_Transform -> Combined_DW"
    }
  ],
  "subroutines": [
    {
      "method": "generate_balance",
      "batch": false,
      "narration": "Generate the Population for DsFreeSus",
      "included_source_nodes": [
        "DsFreeSus"
      ]
    },
    {
      "method": "push_balance_to_edges",
      "batch": false,
      "narration": "Allocate Prevalence to COPDEpsd",
      "included_edges": [
        "HmI3Gkua"
      ]
    },
    {
      "method": "generate_balance",
      "batch": false,
      "narration": "Generate the base values of the surrogate nodes",
      "included_source_nodes": [
        "lrstce6u",
        "lrste7nj",
        "lrwzsau5"
      ]
    },
    {
      "method": "generate_balance",
      "batch": false,
      "narration": "Generate the base values of the nodes that use constants",
      "included_source_nodes": [
        "lrst14z6",
        "lrst0woc",
        "lrst1pq2",
        "lrst7n8a",
        "lrst7nh0",
        "lrst79uc",
        "cigutJvD",
        "lrwz1ikj",
        "wdcNK6r7",
        "2yj2qyPv",
        "btLpjBIQ"
      ]
    },
    {
      "method": "generate_balance",
      "batch": false,
      "narration": "Generate the values of the constants",
      "included_source_nodes": [
        "lrsnjr1s",
        "lrsnjnt3",
        "lrsnjkmt",
        "lrsni0s5",
        "lrsngte4",
        "lrsnavq2",
        "lrso24ss",
        "lrsngpv8",
        "lrsnalk2",
        "lrsnhyyd",
        "lrso28l8",
        "lrso22do",
        "lrso71jf",
        "lrso7mga",
        "lrso81aw"
      ]
    },
    {
      "method": "push_balance_to_edges",
      "batch": false,
      "narration": "Calculate Coverage",
      "included_edges": [
        "cpORh46w",
        "g71GXNvq",
        "TjND1e9T",
        "2cqXSWkb",
        "6aVqOh7C",
        "9Fe9k1UV"
      ]
    },
    {
      "method": "push_balance_to_edges",
      "batch": false,
      "narration": "Calculate Disability Effects",
      "included_edges": [
        "lZsxgkeD",
        "QFKsJ7KA",
        "2UnmNJH5",
        "plB7iwsy",
        "u3I26S1y",
        "ydn35Gq6",
        "LIyy1ky9",
        "R4Vwfikm",
        "MnpPqwz9"
      ]
    },
    {
      "method": "push_balance_to_edges",
      "batch": false,
      "narration": "Remove disability effects from 1.0",
      "included_edges": [
        "rSVQNns4",
        "tgy0fCCF",
        "EfuyA2u1"
      ]
    },
    {
      "method": "push_balance_to_edges",
      "batch": false,
      "narration": "Calculate Healthy and COPD HYL",
      "included_edges": [
        "qWTVoxqS",
        "Sayp6xhP"
      ]
    },
    {
      "method": "push_balance_to_edges",
      "batch": false,
      "narration": "Calculate Combined HYL",
      "included_edges": [
        "fmnbjGOh",
        "6Ei2mkxO"
      ]
    },
    {
      "method": "push_balance_to_edges",
      "batch": false,
      "narration": "Calculate Combined DW",
      "included_edges": [
        "NCs51br5"
      ]
    },
    {
      "method": "push_balance_to_edges",
      "batch": false,
      "narration": "Modify Combined DW with intervention effects",
      "included_edges": [
        "s2aCngF5"
      ]
    },
    {
      "method": "push_balance_to_edges",
      "batch": false,
      "narration": "Calculate Modified HYL",
      "included_edges": [
        "VmiA6H36"
      ]
    },
    {
      "method": "push_balance_to_edges",
      "batch": false,
      "narration": "Calculate DsFreeSus Disability Surrogate",
      "included_edges": [
        "wpXhLEit"
      ]
    },
    {
      "method": "push_balance_to_edges",
      "batch": false,
      "narration": "Calculate COPD HYL Surrogate",
      "included_edges": [
        "ynJLmSBG"
      ]
    },
    {
      "method": "push_balance_to_edges",
      "batch": false,
      "narration": "Add CFR to Surrogate",
      "included_edges": [
        "FlHvd7e4"
      ]
    },
    {
      "method": "push_balance_to_edges",
      "batch": false,
      "narration": "Record Births to Birth Node",
      "included_edges": [
        "6dXmRQ7e",
        "eBRm4kvr"
      ]
    },
    {
      "method": "push_balance_to_edges",
      "batch": false,
      "narration": "Main Routine (Incidence Occurs)",
      "included_edges": [
        "dlGB2RD6"
      ]
    },
    {
      "method": "push_balance_to_edges",
      "batch": false,
      "narration": "Record HYL",
      "included_edges": [
        "Lvoz10h5",
        "5djuaIfD"
      ]
    },
    {
      "method": "push_balance_to_edges",
      "batch": false,
      "narration": "Migration of Populations",
      "included_edges": [
        "3gSm1z84",
        "WALgwDoi"
      ]
    },
    {
      "method": "age",
      "batch": false,
      "narration": "Age the Populations",
      "included_source_nodes": [
        "DsFreeSus",
        "COPDEpsd"
      ]
    },
    {
      "method": "push_balance_to_edges",
      "batch": false,
      "narration": "People Die",
      "included_edges": [
        "MfWskKJT",
        "XNyqqSsC"
      ]
    },
    {
      "method": "push_balance_to_edges",
      "batch": false,
      "narration": "Women give birth",
      "included_edges": [
        "JPGqVn1u",
        "k3JrWa6h"
      ]
    },
    {
      "method": "flush",
      "batch": false,
      "narration": "Flush unneeded values"
    }
  ],
  "subgraph_routines": [
    {
      "method": "generate_balance",
      "only_include_ordered_nodes": false,
      "narration": "Generate the population of DsFreeSus",
      "nodes_to_include": [
        "DsFreeSus"
      ]
    },
    {
      "method": "generate_balance",
      "only_include_ordered_nodes": false,
      "narration": "Generate the base values of the surrogate nodes",
      "nodes_to_include": [
        "DsFreeSus Disability",
        "COPDEpsd Disability"
      ]
    },
    {
      "method": "generate_balance",
      "only_include_ordered_nodes": false,
      "narration": "Generate the base values of the function nodes for constants",
      "nodes_to_include": [
        "OralPrednisolone_Calculated_Coverage",
        "InhaledSalbutamol_Calculated_Coverage",
        "IpratropiumInhaler_Calculated_Coverage",
        "OralPrednisolone_Disability_Effect",
        "InhaledSalbutamol_Disability_Effect",
        "IpratropiumInhaler_Disability_Effect",
        "COPD_Blended_Disability",
        "Disability_Effect_Transform",
        "Blended_Disability_Transform"
      ]
    },
    {
      "method": "generate_balance",
      "only_include_ordered_nodes": false,
      "narration": "Generate the values of the constants",
      "nodes_to_include": [
        "OralPrednisolone_Disability_Impact",
        "InhaledSalbutamol_Disability_Impact",
        "IpratropiumInhaler_Disability_Impact",
        "OralPrednisolone_PIN",
        "InhaledSalbutamol_PIN",
        "IpratropiumInhaler_PIN",
        "OralPrednisolone_Coverage",
        "InhaledSalbutamol_Coverage",
        "IpratropiumInhaler_Coverage",
        "OralPrednisolone_StartingCoverage",
        "InhaledSalbutamol_StartingCoverage",
        "IpratropiumInhaler_StartingCoverage",
        "Healthy_Disability",
        "COPD_Disability",
        "COPDEpsd_CFR"
      ]
    },
    {
      "method": "push_balance_to_edges",
      "only_include_ordered_nodes": false,
      "narration": "Calculate Coverage",
      "nodes_and_edges_to_include": {
        "OralPrednisolone_Coverage": [
          "OralPrednisolone_Calculated_Coverage"
        ],
        "OralPrednisolone_StartingCoverage": [
          "OralPrednisolone_Calculated_Coverage"
        ],
        "InhaledSalbutamol_Coverage": [
          "InhaledSalbutamol_Calculated_Coverage"
        ],
        "InhaledSalbutamol_StartingCoverage": [
          "InhaledSalbutamol_Calculated_Coverage"
        ],
        "IpratropiumInhaler_Coverage": [
          "IpratropiumInhaler_Calculated_Coverage"
        ],
        "IpratropiumInhaler_StartingCoverage": [
          "IpratropiumInhaler_Calculated_Coverage"
        ]
      }
    },
    {
      "method": "push_balance_to_edges",
      "only_include_ordered_nodes": false,
      "narration": "Calculate Disability Effects",
      "nodes_and_edges_to_include": {
        "OralPrednisolone_PIN": [
          "OralPrednisolone_Disability_Effect"
        ],
        "InhaledSalbutamol_PIN": [
          "InhaledSalbutamol_Disability_Effect"
        ],
        "IpratropiumInhaler_PIN": [
          "IpratropiumInhaler_Disability_Effect"
        ],
        "OralPrednisolone_Disability_Impact": [
          "OralPrednisolone_Disability_Effect"
        ],
        "InhaledSalbutamol_Disability_Impact": [
          "InhaledSalbutamol_Disability_Effect"
        ],
        "IpratropiumInhaler_Disability_Impact": [
          "IpratropiumInhaler_Disability_Effect"
        ],
        "OralPrednisolone_Calculated_Coverage": [
          "OralPrednisolone_Disability_Effect"
        ],
        "InhaledSalbutamol_Calculated_Coverage": [
          "InhaledSalbutamol_Disability_Effect"
        ],
        "IpratropiumInhaler_Calculated_Coverage": [
          "IpratropiumInhaler_Disability_Effect"
        ]
      }
    },
    {
      "method": "push_balance_to_edges",
      "only_include_ordered_nodes": false,
      "narration": "Remove Disability Effects from 1.0",
      "nodes_and_edges_to_include": {
        "OralPrednisolone_Disability_Effect": [
          "Disability_Effect_Transform"
        ],
        "InhaledSalbutamol_Disability_Effect": [
          "Disability_Effect_Transform"
        ],
        "IpratropiumInhaler_Disability_Effect": [
          "Disability_Effect_Transform"
        ]
      }
    },
    {
      "method": "push_balance_to_edges",
      "only_include_ordered_nodes": false,
      "narration": "Calculate Blended Disability",
      "nodes_and_edges_to_include": {
        "COPD_Disability": [
          "COPD_Blended_Disability"
        ],
        "Healthy_Disability": [
          "COPD_Blended_Disability"
        ]
      }
    },
    {
      "method": "push_balance_to_edges",
      "only_include_ordered_nodes": false,
      "narration": "Transform blended disability",
      "nodes_and_edges_to_include": {
        "COPD_Blended_Disability": [
          "Blended_Disability_Transform"
        ]
      }
    },
    {
      "method": "push_balance_to_edges",
      "only_include_ordered_nodes": false,
      "narration": "Calculate COPDEpsd Disability Surrogate",
      "nodes_and_edges_to_include": {
        "Blended_Disability_Transform": [
          "COPDEpsd Disability"
        ],
        "Disability_Effect_Transform": [
          "COPDEpsd Disability"
        ]
      }
    },
    {
      "method": "push_balance_to_edges",
      "only_include_ordered_nodes": false,
      "narration": "Calculate DsFreeSus Disability Surrogate",
      "nodes_and_edges_to_include": {
        "Healthy_Disability": [
          "DsFreeSus Disability"
        ]
      }
    },
    {
      "method": "push_balance_to_edges",
      "only_include_ordered_nodes": false,
      "narration": "Calculate Mortality Surrogate",
      "nodes_and_edges_to_include": {
        "COPDEpsd_CFR": [
          "COPDEpsd Mortality"
        ]
      }
    },
    {
      "method": "push_balance_to_edges",
      "only_include_ordered_nodes": false,
      "narration": "Record Births to Birth Node",
      "nodes_and_edges_to_include": {
        "DsFreeSus": [
          "Births"
        ],
        "COPDEpsd": [
          "Births"
        ]
      }
    },
    {
      "method": "push_balance_to_edges",
      "narration": "Main Routine",
      "nodes_and_edges_to_include": {
        "DsFreeSus": [
          "COPDEpsd"
        ],
        "COPDEpsd": [
          "DsFreeSus"
        ]
      }
    },
    {
      "method": "push_balance_to_edges",
      "narration": "Record Disability",
      "nodes_and_edges_to_include": {
        "DsFreeSus": [
          "DsFreeSus Disability"
        ],
        "COPDEpsd": [
          "COPDEpsd Disability"
        ],
        "Deceased": [
          "Disability"
        ]
      }
    },
    {
      "method": "push_balance_to_edges",
      "narration": "Migration of Populations",
      "nodes_and_edges_to_include": {
        "DsFreeSus": [
          "DsFreeSus"
        ],
        "COPDEpsd": [
          "COPDEpsd"
        ]
      }
    },
    {
      "method": "age",
      "narration": "Age the populations",
      "nodes_to_include": [
        "DsFreeSus",
        "COPDEpsd"
      ]
    },
    {
      "method": "push_balance_to_edges",
      "narration": "People die",
      "nodes_and_edges_to_include": {
        "DsFreeSus": [
          "Deceased"
        ],
        "COPDEpsd": [
          "COPDEpsd Mortality"
        ]
      }
    },
    {
      "method": "push_balance_to_edges",
      "only_include_ordered_nodes": false,
      "narration": "Women give birth",
      "nodes_and_edges_to_include": {
        "Births": [
          "DsFreeSus"
        ]
      }
    },
    {
      "method": "flush",
      "narration": "Flush unneeded values",
      "only_include_ordered_nodes": false
    }
  ]
}