{
  "metadata": {
    "user": "appendix_3",
    "intervention": "copd",
    "scenario": "baseline",
    "country": "AFG",
    "version": "1.0"
  },
  "runtime": {
    "startYear": 2020,
    "endYear": 2030
  },
  "nodes": [
    {
      "id": "lrstce6u",
      "x": 111.44,
      "y": -40.87,
      "label": "COPDEpsd Mortality",
      "node_type": "surrogate",
      "color": "#7038E1",
      "generate_array": {
        "method": "single_value",
        "parameters": {
          "value": 0
        }
      }
    },
    {
      "id": "lrwzsau5",
      "x": 135.87,
      "y": -53.09,
      "label": "COPDEpsd Disability",
      "node_type": "surrogate",
      "color": "#7038E1",
      "generate_array": {
        "method": "single_value",
        "parameters": {
          "value": 0
        }
      },
      "flush": true
    },
    {
      "id": "lrso81aw",
      "x": 109.01,
      "y": -12.48,
      "label": "COPDEpsd_CFR",
      "color": "#06B4E1",
      "generate_array": {
        "data_fetcher_label": "fhdb",
        "method": "epidemiology",
        "parameters": {
          "country": "ARG",
          "disease": "COPD",
          "measure": "deaths"
        }
      }
    },
    {
      "id": "lrwzmr03",
      "x": 73.99,
      "y": -28.14,
      "label": "Blended_Disability_Transform",
      "color": "#06B4E1",
      "generate_array": {
        "method": "single_value",
        "parameters": {
          "value": 0
        }
      },
      "flush": true
    },
    {
      "id": "lrwz1ikj",
      "x": 33.38,
      "y": -4.19,
      "label": "Disability_Effect_Transform",
      "description": "Removing each effect from 1",
      "color": "#06B4E1",
      "flush": true,
      "generate_array": {
        "method": "single_value",
        "parameters": {
          "value": 1
        }
      }
    },
    {
      "id": "lrsszfi2",
      "x": 63.47,
      "y": -43.06,
      "label": "COPD_Blended_Disability",
      "color": "#06B4E1",
      "generate_array": {
        "method": "single_value",
        "parameters": {
          "value": 1
        }
      },
      "flush": true
    },
    {
      "id": "Deceased",
      "x": 130.19,
      "y": -26.89,
      "label": "Deceased",
      "description": "The state of being dead",
      "node_type": "state",
      "balance_type": "array",
      "color": "#FB6375",
      "order": 3
    },
    {
      "id": "COPDEpsd",
      "x": 95.28,
      "y": -53.44,
      "label": "COPDEpsd",
      "ageing": true,
      "color": "#E5EF73",
      "order": 1
    },
    {
      "id": "lrso71jf",
      "x": 62.12,
      "y": -66.07,
      "label": "Healthy_Disability",
      "color": "#06B4E1",
      "generate_array": {
        "fetch_once": true,
        "data_fetcher_label": "fhdb",
        "method": "healthy_disability",
        "parameters": {
          "country": "ARG"
        }
      }
    },
    {
      "id": "lrso7mga",
      "x": 22.78,
      "y": -59.63,
      "label": "COPD_Disability",
      "color": "#06B4E1",
      "generate_array": {
        "fetch_once": true,
        "data_fetcher_label": "copd",
        "method": "get_observation",
        "parameters": {
          "country": "ARG",
          "observation": "COPDEpsd -> Disability"
        }
      }
    },
    {
      "id": "Births",
      "x": 102.55,
      "y": -78.96,
      "label": "Births",
      "description": "Store of the number of births in the population",
      "node_type": "function",
      "balance_type": "array",
      "order": 2,
      "flush": true,
      "color": "#EB7FEF"
    },
    {
      "id": "lrste7nj",
      "x": 151.41,
      "y": -66.73,
      "label": "DsFreeSus Disability",
      "node_type": "surrogate",
      "color": "#7038E1",
      "generate_array": {
        "method": "single_value",
        "parameters": {
          "value": 1
        }
      },
      "flush": true
    },
    {
      "id": "Disability",
      "x": 176.03,
      "y": -53.85,
      "label": "Disability",
      "description": "A store of disability adjusted life years",
      "node_type": "state",
      "balance_type": "array",
      "color": "#FFB255",
      "flush": true
    },
    {
      "id": "DsFreeSus",
      "x": 130.62,
      "y": -79.15,
      "label": "DsFreeSus",
      "description": "State holding the balance of the healthy population",
      "node_type": "state",
      "balance_type": "array",
      "order": 0,
      "ageing": true,
      "generate_array": {
        "data_fetcher_label": "fhdb",
        "method": "population",
        "parameters": {
          "country": "ARG"
        },
        "fetch_once": true
      },
      "color": "#3CD009"
    },
    {
      "id": "lrst7n8a",
      "x": -46.14,
      "y": 0.38,
      "color": "#06B4E1",
      "flush": true,
      "label": "IpratropiumInhaler_Disability_Effect",
      "generate_array": {
        "method": "single_value",
        "parameters": {
          "value": 1
        }
      }
    },
    {
      "id": "lrst7nh0",
      "x": -47.89,
      "y": -4.82,
      "color": "#06B4E1",
      "flush": true,
      "label": "OralPrednisolone_Disability_Effect",
      "generate_array": {
        "method": "single_value",
        "parameters": {
          "value": 1
        }
      }
    },
    {
      "id": "lrst14z6",
      "x": -50.43,
      "y": 63.79,
      "label": "OralPrednisolone_Calculated_Coverage",
      "generate_array": {
        "method": "single_value",
        "parameters": {
          "value": 0
        }
      },
      "color": "#06B4E1",
      "flush": true
    },
    {
      "id": "lrst0woc",
      "x": -51.31,
      "y": 59.06,
      "label": "InhaledSalbutamol_Calculated_Coverage",
      "generate_array": {
        "method": "single_value",
        "parameters": {
          "value": 0
        }
      },
      "color": "#06B4E1",
      "flush": true
    },
    {
      "id": "lrst1pq2",
      "x": -51.05,
      "y": 68.93,
      "label": "IpratropiumInhaler_Calculated_Coverage",
      "generate_array": {
        "method": "single_value",
        "parameters": {
          "value": 0
        }
      },
      "color": "#06B4E1",
      "flush": true
    },
    {
      "id": "lrst79uc",
      "x": -51.47,
      "y": -9.87,
      "color": "#06B4E1",
      "flush": true,
      "label": "InhaledSalbutamol_Disability_Effect",
      "generate_array": {
        "method": "single_value",
        "parameters": {
          "value": 1
        }
      }
    },
    {
      "id": "lrsnjr1s",
      "x": -46.52,
      "y": -54.94,
      "color": "#06B4E1",
      "label": "IpratropiumInhaler_Disability_Impact",
      "generate_array": {
        "fetch_once": true,
        "method": "single_value",
        "parameters": {
          "value": -0.169
        }
      }
    },
    {
      "id": "lrsnjnt3",
      "x": -50.12,
      "y": -59.99,
      "color": "#06B4E1",
      "label": "OralPrednisolone_Disability_Impact",
      "generate_array": {
        "fetch_once": true,
        "method": "single_value",
        "parameters": {
          "value": -0.337
        }
      }
    },
    {
      "id": "lrsnjkmt",
      "x": -54.12,
      "y": -65.31,
      "color": "#06B4E1",
      "label": "InhaledSalbutamol_Disability_Impact",
      "generate_array": {
        "fetch_once": true,
        "method": "single_value",
        "parameters": {
          "value": -0.148
        }
      }
    },
    {
      "id": "lrso24ss",
      "x": -68.55,
      "y": 126.47,
      "label": "IpratropiumInhaler_Coverage",
      "generate_array": {
        "method": "single_value",
        "parameters": {
          "value": 0.95
        }
      },
      "color": "#06B4E1",
      "flush": true
    },
    {
      "id": "lrsnhyyd",
      "x": -66.61,
      "y": 130.97,
      "label": "IpratropiumInhaler_StartingCoverage",
      "generate_array": {
        "fetch_once": true,
        "method": "single_value",
        "parameters": {
          "value": -0.05
        }
      },
      "color": "#06B4E1"
    },
    {
      "id": "lrsngpv8",
      "x": -88,
      "y": 112.25,
      "label": "OralPrednisolone_Coverage",
      "generate_array": {
        "method": "single_value",
        "parameters": {
          "value": 0.95
        }
      },
      "color": "#06B4E1",
      "flush": true
    },
    {
      "id": "lrso28l8",
      "x": -86.78,
      "y": 116.2,
      "label": "OralPrednisolone_StartingCoverage",
      "generate_array": {
        "fetch_once": true,
        "method": "single_value",
        "parameters": {
          "value": -0.05
        }
      },
      "color": "#06B4E1"
    },
    {
      "id": "lrsnalk2",
      "x": -111.3,
      "y": 96.62,
      "label": "InhaledSalbutamol_Coverage",
      "generate_array": {
        "method": "single_value",
        "parameters": {
          "value": 0.95
        }
      },
      "color": "#06B4E1",
      "flush": true
    },
    {
      "id": "lrso22do",
      "x": -110.16,
      "y": 101.81,
      "label": "InhaledSalbutamol_StartingCoverage",
      "generate_array": {
        "fetch_once": true,
        "method": "single_value",
        "parameters": {
          "value": -0.05
        }
      },
      "color": "#06B4E1"
    },
    {
      "id": "lrsni0s5",
      "x": -138.86,
      "y": 0.69,
      "label": "IpratropiumInhaler_PIN",
      "generate_array": {
        "fetch_once": true,
        "method": "single_value",
        "parameters": {
          "value": 0.21
        }
      },
      "color": "#06B4E1"
    },
    {
      "id": "lrsngte4",
      "x": -139.12,
      "y": -5.2,
      "label": "OralPrednisolone_PIN",
      "generate_array": {
        "fetch_once": true,
        "method": "single_value",
        "parameters": {
          "value": 0.12
        }
      },
      "color": "#06B4E1"
    },
    {
      "id": "lrsnavq2",
      "x": -139.7,
      "y": -10.59,
      "label": "InhaledSalbutamol_PIN",
      "generate_array": {
        "fetch_once": true,
        "method": "single_value",
        "parameters": {
          "value": 1
        }
      },
      "color": "#06B4E1"
    }
  ],
  "links": [
    {
      "source": "DsFreeSus",
      "target": "DsFreeSus",
      "description": "Adjust the state by the net migration rate",
      "edge_type": "modifier",
      "value_to_target_operator": "add",
      "requires_source_balance": true,
      "remove_value_from_source": false,
      "generate_array": {
        "data_fetcher_label": "fhdb",
        "method": "migration",
        "parameters": {
          "country": "ARG"
        }
      },
      "order": 0
    },
    {
      "source": "Deceased",
      "target": "Disability",
      "description": "Disability adjusted life years for deceased persons",
      "edge_type": "modifier",
      "value_to_target_operator": "add",
      "requires_source_balance": true,
      "remove_value_from_source": false,
      "generate_array": {
        "method": "single_value",
        "parameters": {
          "value": 1
        }
      },
      "order": 0
    },
    {
      "source": "DsFreeSus",
      "target": "Births",
      "order": 1,
      "description": "Project the number of births using the population and ASFR",
      "edge_type": "projection",
      "requires_source_balance": true,
      "remove_value_from_source": false,
      "value_to_target_operator": "add",
      "generate_array": {
        "data_fetcher_label": "fhdb",
        "method": "fertility",
        "parameters": {
          "country": "ARG"
        }
      }
    },
    {
      "source": "Births",
      "target": "DsFreeSus",
      "description": "Male births into the population",
      "edge_type": "modifier",
      "requires_source_balance": true,
      "remove_value_from_source": false,
      "value_to_target_operator": "add",
      "generate_array": {
        "data_fetcher_label": "fhdb",
        "method": "sex_ratio",
        "parameters": {
          "country": "ARG",
          "sex": "m"
        }
      },
      "weighted_balance_postprocessing": {
        "into": [
          0,
          0
        ]
      },
      "order": 0
    },
    {
      "source": "Births",
      "target": "DsFreeSus",
      "description": "Female births into the population",
      "edge_type": "modifier",
      "requires_source_balance": true,
      "remove_value_from_source": false,
      "value_to_target_operator": "add",
      "generate_array": {
        "data_fetcher_label": "fhdb",
        "method": "sex_ratio",
        "parameters": {
          "country": "ARG",
          "sex": "f"
        }
      },
      "weighted_balance_postprocessing": {
        "into": [
          1,
          0
        ]
      },
      "order": 0
    },
    {
      "source": "DsFreeSus",
      "target": "Deceased",
      "order": 2,
      "description": "Transition people into the mortality state",
      "edge_type": "transition",
      "requires_source_balance": true,
      "remove_value_from_source": true,
      "value_to_target_operator": "add",
      "generate_array": {
        "data_fetcher_label": "fhdb",
        "method": "mortality",
        "parameters": {
          "country": "ARG"
        }
      }
    },
    {
      "source": "DsFreeSus",
      "target": "COPDEpsd",
      "description": "Progression of COPD episode",
      "edge_type": "transition",
      "requires_source_balance": true,
      "remove_value_from_source": true,
      "value_to_target_operator": "add",
      "generate_array": {
        "data_fetcher_label": "fhdb",
        "method": "epidemiology",
        "parameters": {
          "country": "ARG",
          "disease": "COPD",
          "measure": "incidence"
        }
      },
      "order": 4
    },
    {
      "source": "COPDEpsd",
      "target": "Births",
      "order": 1,
      "description": "Project the number of births using the population and ASFR",
      "edge_type": "projection",
      "requires_source_balance": true,
      "remove_value_from_source": false,
      "value_to_target_operator": "add",
      "generate_array": {
        "data_fetcher_label": "fhdb",
        "method": "fertility",
        "parameters": {
          "country": "ARG"
        }
      }
    },
    {
      "source": "COPDEpsd",
      "target": "COPDEpsd",
      "description": "Adjust the state by the net migration rate",
      "edge_type": "modifier",
      "value_to_target_operator": "add",
      "requires_source_balance": true,
      "remove_value_from_source": false,
      "generate_array": {
        "data_fetcher_label": "fhdb",
        "method": "migration",
        "parameters": {
          "country": "ARG"
        }
      },
      "order": 0
    },
    {
      "source": "DsFreeSus",
      "target": "COPDEpsd",
      "description": "Progression of COPD episode",
      "edge_type": "transition",
      "requires_source_balance": true,
      "remove_value_from_source": true,
      "value_to_target_operator": "add",
      "generate_array": {
        "fetch_once": true,
        "data_fetcher_label": "fhdb",
        "method": "epidemiology",
        "parameters": {
          "country": "ARG",
          "disease": "COPD",
          "measure": "prevalence"
        }
      },
      "order": 3
    },
    {
      "source": "lrso71jf",
      "target": "lrsszfi2",
      "edge_type": "projection",
      "requires_source_balance": true,
      "remove_value_from_source": false,
      "value_to_target_operator": "multiply",
      "weighted_balance_postprocessing": {
        "inverse": true
      },
      "generate_array": {
        "method": "single_value",
        "parameters": {
          "value": 1
        }
      }
    },
    {
      "source": "lrso7mga",
      "target": "lrsszfi2",
      "edge_type": "projection",
      "requires_source_balance": true,
      "remove_value_from_source": false,
      "value_to_target_operator": "multiply",
      "weighted_balance_postprocessing": {
        "inverse": true
      },
      "generate_array": {
        "method": "single_value",
        "parameters": {
          "value": 1
        }
      }
    },
    {
      "source": "lrsnalk2",
      "target": "lrst0woc",
      "edge_type": "projection",
      "requires_source_balance": true,
      "remove_value_from_source": false,
      "value_to_target_operator": "add",
      "generate_array": {
        "method": "single_value",
        "parameters": {
          "value": 1
        }
      }
    },
    {
      "source": "lrso22do",
      "target": "lrst0woc",
      "edge_type": "projection",
      "requires_source_balance": true,
      "remove_value_from_source": false,
      "value_to_target_operator": "add",
      "generate_array": {
        "method": "single_value",
        "parameters": {
          "value": 1
        }
      }
    },
    {
      "source": "lrsngpv8",
      "target": "lrst14z6",
      "edge_type": "projection",
      "requires_source_balance": true,
      "remove_value_from_source": false,
      "value_to_target_operator": "add",
      "generate_array": {
        "method": "single_value",
        "parameters": {
          "value": 1
        }
      }
    },
    {
      "source": "lrso28l8",
      "target": "lrst14z6",
      "edge_type": "projection",
      "requires_source_balance": true,
      "remove_value_from_source": false,
      "value_to_target_operator": "add",
      "generate_array": {
        "method": "single_value",
        "parameters": {
          "value": 1
        }
      }
    },
    {
      "source": "lrsnhyyd",
      "target": "lrst1pq2",
      "edge_type": "projection",
      "requires_source_balance": true,
      "remove_value_from_source": false,
      "value_to_target_operator": "add",
      "generate_array": {
        "method": "single_value",
        "parameters": {
          "value": 1
        }
      }
    },
    {
      "source": "lrso24ss",
      "target": "lrst1pq2",
      "edge_type": "projection",
      "requires_source_balance": true,
      "remove_value_from_source": false,
      "value_to_target_operator": "add",
      "generate_array": {
        "method": "single_value",
        "parameters": {
          "value": 1
        }
      }
    },
    {
      "source": "lrsngte4",
      "target": "lrst7nh0",
      "edge_type": "projection",
      "requires_source_balance": true,
      "remove_value_from_source": false,
      "value_to_target_operator": "multiply",
      "generate_array": {
        "method": "single_value",
        "parameters": {
          "value": 1
        }
      }
    },
    {
      "source": "lrst14z6",
      "target": "lrst7nh0",
      "edge_type": "projection",
      "requires_source_balance": true,
      "remove_value_from_source": false,
      "value_to_target_operator": "multiply",
      "generate_array": {
        "method": "single_value",
        "parameters": {
          "value": 1
        }
      }
    },
    {
      "source": "lrsnjnt3",
      "target": "lrst7nh0",
      "edge_type": "projection",
      "requires_source_balance": true,
      "remove_value_from_source": false,
      "value_to_target_operator": "multiply",
      "generate_array": {
        "method": "single_value",
        "parameters": {
          "value": 1
        }
      }
    },
    {
      "source": "lrsnavq2",
      "target": "lrst79uc",
      "edge_type": "projection",
      "requires_source_balance": true,
      "remove_value_from_source": false,
      "value_to_target_operator": "multiply",
      "generate_array": {
        "method": "single_value",
        "parameters": {
          "value": 1
        }
      }
    },
    {
      "source": "lrst0woc",
      "target": "lrst79uc",
      "edge_type": "projection",
      "requires_source_balance": true,
      "remove_value_from_source": false,
      "value_to_target_operator": "multiply",
      "generate_array": {
        "method": "single_value",
        "parameters": {
          "value": 1
        }
      }
    },
    {
      "source": "lrsnjkmt",
      "target": "lrst79uc",
      "edge_type": "projection",
      "requires_source_balance": true,
      "remove_value_from_source": false,
      "value_to_target_operator": "multiply",
      "generate_array": {
        "method": "single_value",
        "parameters": {
          "value": 1
        }
      }
    },
    {
      "source": "lrsni0s5",
      "target": "lrst7n8a",
      "edge_type": "projection",
      "requires_source_balance": true,
      "remove_value_from_source": false,
      "value_to_target_operator": "multiply",
      "generate_array": {
        "method": "single_value",
        "parameters": {
          "value": 1
        }
      }
    },
    {
      "source": "lrst1pq2",
      "target": "lrst7n8a",
      "edge_type": "projection",
      "requires_source_balance": true,
      "remove_value_from_source": false,
      "value_to_target_operator": "multiply",
      "generate_array": {
        "method": "single_value",
        "parameters": {
          "value": 1
        }
      }
    },
    {
      "source": "lrsnjr1s",
      "target": "lrst7n8a",
      "edge_type": "projection",
      "requires_source_balance": true,
      "remove_value_from_source": false,
      "value_to_target_operator": "multiply",
      "generate_array": {
        "method": "single_value",
        "parameters": {
          "value": 1
        }
      }
    },
    {
      "source": "lrso81aw",
      "target": "lrstce6u",
      "edge_type": "projection",
      "requires_source_balance": true,
      "remove_value_from_source": false,
      "value_to_target_operator": "add",
      "generate_array": {
        "method": "single_value",
        "parameters": {
          "value": 1
        }
      }
    },
    {
      "source": "lrsszfi2",
      "target": "lrwzmr03",
      "edge_type": "projection",
      "requires_source_balance": true,
      "remove_value_from_source": false,
      "value_to_target_operator": "add",
      "weighted_balance_postprocessing": {
        "inverse": true
      },
      "generate_array": {
        "method": "single_value",
        "parameters": {
          "value": 1
        }
      }
    },
    {
      "source": "lrst7nh0",
      "target": "lrwz1ikj",
      "edge_type": "projection",
      "requires_source_balance": true,
      "remove_value_from_source": false,
      "value_to_target_operator": "add",
      "generate_array": {
        "method": "single_value",
        "parameters": {
          "value": 1
        }
      }
    },
    {
      "source": "lrst79uc",
      "target": "lrwz1ikj",
      "edge_type": "projection",
      "requires_source_balance": true,
      "remove_value_from_source": false,
      "value_to_target_operator": "add",
      "generate_array": {
        "method": "single_value",
        "parameters": {
          "value": 1
        }
      }
    },
    {
      "source": "lrst7n8a",
      "target": "lrwz1ikj",
      "edge_type": "projection",
      "requires_source_balance": true,
      "remove_value_from_source": false,
      "value_to_target_operator": "add",
      "generate_array": {
        "method": "single_value",
        "parameters": {
          "value": 1
        }
      }
    },
    {
      "source": "lrso71jf",
      "target": "lrste7nj",
      "edge_type": "projection",
      "requires_source_balance": true,
      "remove_value_from_source": false,
      "value_to_target_operator": "multiply",
      "generate_array": {
        "method": "single_value",
        "parameters": {
          "value": 1
        }
      }
    },
    {
      "source": "lrwzmr03",
      "target": "lrwzsau5",
      "edge_type": "projection",
      "requires_source_balance": true,
      "remove_value_from_source": false,
      "value_to_target_operator": "add",
      "generate_array": {
        "method": "single_value",
        "parameters": {
          "value": 1
        }
      }
    },
    {
      "source": "lrwz1ikj",
      "target": "lrwzsau5",
      "edge_type": "projection",
      "requires_source_balance": true,
      "remove_value_from_source": false,
      "value_to_target_operator": "multiply",
      "generate_array": {
        "method": "single_value",
        "parameters": {
          "value": 1
        }
      }
    },
    {
      "source": "DsFreeSus",
      "target": "lrste7nj",
      "edge_type": "transition",
      "set_by_surrogate": true,
      "value_to_target_operator": "add",
      "requires_source_balance": true,
      "remove_value_from_source": false
    },
    {
      "source": "lrste7nj",
      "target": "Disability",
      "requires_source_balance": true,
      "remove_value_from_source": false,
      "value_to_target_operator": "add",
      "generate_array": {
        "method": "single_value",
        "parameters": {
          "value": 1
        }
      }
    },
    {
      "source": "COPDEpsd",
      "target": "lrwzsau5",
      "edge_type": "transition",
      "set_by_surrogate": true,
      "value_to_target_operator": "add",
      "requires_source_balance": true,
      "remove_value_from_source": false
    },
    {
      "source": "lrwzsau5",
      "target": "Disability",
      "requires_source_balance": true,
      "remove_value_from_source": false,
      "value_to_target_operator": "add",
      "generate_array": {
        "method": "single_value",
        "parameters": {
          "value": 1
        }
      }
    },
    {
      "source": "COPDEpsd",
      "target": "lrstce6u",
      "edge_type": "transition",
      "set_by_surrogate": true,
      "value_to_target_operator": "add",
      "requires_source_balance": true,
      "remove_value_from_source": true
    },
    {
      "source": "lrstce6u",
      "target": "Deceased",
      "requires_source_balance": true,
      "remove_value_from_source": false,
      "value_to_target_operator": "add",
      "generate_array": {
        "method": "single_value",
        "parameters": {
          "value": 1
        }
      }
    }
  ],
  "subgraph_routines": [
    {
      "method": "generate_balance",
      "only_include_ordered_nodes": false,
      "narration": "Generate the population of DsFreeSus",
      "nodes_to_include": [
        "DsFreeSus"
      ]
    },
    {
      "method": "generate_balance",
      "only_include_ordered_nodes": false,
      "narration": "Generate the base values of the surrogate nodes",
      "nodes_to_include": [
        "DsFreeSus Disability",
        "COPDEpsd Disability"
      ]
    },
    {
      "method": "generate_balance",
      "only_include_ordered_nodes": false,
      "narration": "Generate the base values of the function nodes for constants",
      "nodes_to_include": [
        "OralPrednisolone_Calculated_Coverage",
        "InhaledSalbutamol_Calculated_Coverage",
        "IpratropiumInhaler_Calculated_Coverage",
        "OralPrednisolone_Disability_Effect",
        "InhaledSalbutamol_Disability_Effect",
        "IpratropiumInhaler_Disability_Effect",
        "COPD_Blended_Disability",
        "Disability_Effect_Transform",
        "Blended_Disability_Transform"
      ]
    },
    {
      "method": "generate_balance",
      "only_include_ordered_nodes": false,
      "narration": "Generate the values of the constants",
      "nodes_to_include": [
        "OralPrednisolone_Disability_Impact",
        "InhaledSalbutamol_Disability_Impact",
        "IpratropiumInhaler_Disability_Impact",
        "OralPrednisolone_PIN",
        "InhaledSalbutamol_PIN",
        "IpratropiumInhaler_PIN",
        "OralPrednisolone_Coverage",
        "InhaledSalbutamol_Coverage",
        "IpratropiumInhaler_Coverage",
        "OralPrednisolone_StartingCoverage",
        "InhaledSalbutamol_StartingCoverage",
        "IpratropiumInhaler_StartingCoverage",
        "Healthy_Disability",
        "COPD_Disability",
        "COPDEpsd_CFR"
      ]
    },
    {
      "method": "push_balance_to_edges",
      "only_include_ordered_nodes": false,
      "narration": "Calculate Coverage",
      "nodes_and_edges_to_include": {
        "OralPrednisolone_Coverage": [
          "OralPrednisolone_Calculated_Coverage"
        ],
        "OralPrednisolone_StartingCoverage": [
          "OralPrednisolone_Calculated_Coverage"
        ],
        "InhaledSalbutamol_Coverage": [
          "InhaledSalbutamol_Calculated_Coverage"
        ],
        "InhaledSalbutamol_StartingCoverage": [
          "InhaledSalbutamol_Calculated_Coverage"
        ],
        "IpratropiumInhaler_Coverage": [
          "IpratropiumInhaler_Calculated_Coverage"
        ],
        "IpratropiumInhaler_StartingCoverage": [
          "IpratropiumInhaler_Calculated_Coverage"
        ]
      }
    },
    {
      "method": "push_balance_to_edges",
      "only_include_ordered_nodes": false,
      "narration": "Calculate Disability Effects",
      "nodes_and_edges_to_include": {
        "OralPrednisolone_PIN": [
          "OralPrednisolone_Disability_Effect"
        ],
        "InhaledSalbutamol_PIN": [
          "InhaledSalbutamol_Disability_Effect"
        ],
        "IpratropiumInhaler_PIN": [
          "IpratropiumInhaler_Disability_Effect"
        ],
        "OralPrednisolone_Disability_Impact": [
          "OralPrednisolone_Disability_Effect"
        ],
        "InhaledSalbutamol_Disability_Impact": [
          "InhaledSalbutamol_Disability_Effect"
        ],
        "IpratropiumInhaler_Disability_Impact": [
          "IpratropiumInhaler_Disability_Effect"
        ],
        "OralPrednisolone_Calculated_Coverage": [
          "OralPrednisolone_Disability_Effect"
        ],
        "InhaledSalbutamol_Calculated_Coverage": [
          "InhaledSalbutamol_Disability_Effect"
        ],
        "IpratropiumInhaler_Calculated_Coverage": [
          "IpratropiumInhaler_Disability_Effect"
        ]
      }
    },
    {
      "method": "push_balance_to_edges",
      "only_include_ordered_nodes": false,
      "narration": "Remove Disability Effects from 1.0",
      "nodes_and_edges_to_include": {
        "OralPrednisolone_Disability_Effect": [
          "Disability_Effect_Transform"
        ],
        "InhaledSalbutamol_Disability_Effect": [
          "Disability_Effect_Transform"
        ],
        "IpratropiumInhaler_Disability_Effect": [
          "Disability_Effect_Transform"
        ]
      }
    },
    {
      "method": "push_balance_to_edges",
      "only_include_ordered_nodes": false,
      "narration": "Calculate Blended Disability",
      "nodes_and_edges_to_include": {
        "COPD_Disability": [
          "COPD_Blended_Disability"
        ],
        "Healthy_Disability": [
          "COPD_Blended_Disability"
        ]
      }
    },
    {
      "method": "push_balance_to_edges",
      "only_include_ordered_nodes": false,
      "narration": "Transform blended disability",
      "nodes_and_edges_to_include": {
        "COPD_Blended_Disability": [
          "Blended_Disability_Transform"
        ]
      }
    },
    {
      "method": "push_balance_to_edges",
      "only_include_ordered_nodes": false,
      "narration": "Calculate COPDEpsd Disability Surrogate",
      "nodes_and_edges_to_include": {
        "Blended_Disability_Transform": [
          "COPDEpsd Disability"
        ],
        "Disability_Effect_Transform": [
          "COPDEpsd Disability"
        ]
      }
    },
    {
      "method": "push_balance_to_edges",
      "only_include_ordered_nodes": false,
      "narration": "Calculate DsFreeSus Disability Surrogate",
      "nodes_and_edges_to_include": {
        "Healthy_Disability": [
          "DsFreeSus Disability"
        ]
      }
    },
    {
      "method": "push_balance_to_edges",
      "only_include_ordered_nodes": false,
      "narration": "Calculate Mortality Surrogate",
      "nodes_and_edges_to_include": {
        "COPDEpsd_CFR": [
          "COPDEpsd Mortality"
        ]
      }
    },
    {
      "method": "push_balance_to_edges",
      "only_include_ordered_nodes": false,
      "narration": "Record Births to Birth Node",
      "nodes_and_edges_to_include": {
        "DsFreeSus": [
          "Births"
        ],
        "COPDEpsd": [
          "Births"
        ]
      }
    },
    {
      "method": "push_balance_to_edges",
      "narration": "Main Routine",
      "nodes_and_edges_to_include": {
        "DsFreeSus": [
          "COPDEpsd"
        ],
        "COPDEpsd": [
          "DsFreeSus"
        ]
      }
    },
    {
      "method": "push_balance_to_edges",
      "narration": "Record Disability",
      "nodes_and_edges_to_include": {
        "DsFreeSus": [
          "DsFreeSus Disability"
        ],
        "COPDEpsd": [
          "COPDEpsd Disability"
        ],
        "Deceased": [
          "Disability"
        ]
      }
    },
    {
      "method": "push_balance_to_edges",
      "narration": "Migration of Populations",
      "nodes_and_edges_to_include": {
        "DsFreeSus": [
          "DsFreeSus"
        ],
        "COPDEpsd": [
          "COPDEpsd"
        ]
      }
    },
    {
      "method": "age",
      "narration": "Age the populations",
      "nodes_to_include": [
        "DsFreeSus",
        "COPDEpsd"
      ]
    },
    {
      "method": "push_balance_to_edges",
      "narration": "People die",
      "nodes_and_edges_to_include": {
        "DsFreeSus": [
          "Deceased"
        ],
        "COPDEpsd": [
          "COPDEpsd Mortality"
        ]
      }
    },
    {
      "method": "push_balance_to_edges",
      "only_include_ordered_nodes": false,
      "narration": "Women give birth",
      "nodes_and_edges_to_include": {
        "Births": [
          "DsFreeSus"
        ]
      }
    },
    {
      "method": "flush",
      "narration": "Flush unneeded values",
      "only_include_ordered_nodes": false
    }
  ]
}